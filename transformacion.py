"""
en un archivo en colab se cargan los datos separados del 2017 al 2022 de los resultados pruebas saber para colegios
ubicados en cali, luego con el metodo concat se unen y se genera un solo arhivo llamado df_2017_2022 todos.
"""
import pandas as pd
df = pd.read_excel('df_input\df_2017_2022todos publi y privados.xlsx')
#print(df.info())
# se identifica que la columna estu_etnia cuenta con 2388 lo que indica que falta el 98% de los datos, se eliminan

""" 
No se tienen en cuenta las siguientes columnas:
['ESTU_TIPODOCUMENTO','ESTU_NACIONALIDAD','PERIODO','ESTU_CONSECUTIVO','ESTU_ESTUDIANTE','ESTU_PAIS_RESIDE',
'ESTU_TIENEETNIA','ESTU_ETNIA','ESTU_DEPTO_RESIDE','ESTU_COD_RESIDE_DEPTO','ESTU_MCPIO_RESIDE','ESTU_COD_RESIDE_MCPIO',
'COLE_CODIGO_ICFES','COLE_NOMBRE_ESTABLECIMIENTO','COLE_COD_DANE_SEDE','COLE_NOMBRE_SEDE','COLE_SEDE_PRINCIPAL',
'COLE_COD_MCPIO_UBICACION','COLE_MCPIO_UBICACION','COLE_COD_DEPTO_UBICACION','COLE_DEPTO_UBICACION','ESTU_PRIVADO_LIBERTAD',
'ESTU_COD_MCPIO_PRESENTACION','ESTU_MCPIO_PRESENTACION','ESTU_DEPTO_PRESENTACION','ESTU_COD_DEPTO_PRESENTACION','PUNT_LECTURA_CRITICA',
'PERCENTIL_LECTURA_CRITICA','DESEMP_LECTURA_CRITICA','PUNT_MATEMATICAS','PERCENTIL_MATEMATICAS','DESEMP_MATEMATICAS',
'PUNT_C_NATURALES','PERCENTIL_C_NATURALES','DESEMP_C_NATURALES','PUNT_SOCIALES_CIUDADANAS','PERCENTIL_SOCIALES_CIUDADANAS',
'DESEMP_SOCIALES_CIUDADANAS','PUNT_INGLES','PERCENTIL_INGLES','DESEMP_INGLES','PERCENTIL_GLOBAL','ESTU_INSE_INDIVIDUAL'
  ]
"""
columnas = ['ESTU_TIPODOCUMENTO','ESTU_NACIONALIDAD','PERIODO','ESTU_CONSECUTIVO','ESTU_ESTUDIANTE','ESTU_PAIS_RESIDE',
'ESTU_TIENEETNIA','ESTU_ETNIA','ESTU_DEPTO_RESIDE','ESTU_COD_RESIDE_DEPTO','ESTU_MCPIO_RESIDE','ESTU_COD_RESIDE_MCPIO',
'COLE_CODIGO_ICFES','COLE_NOMBRE_ESTABLECIMIENTO','COLE_COD_DANE_SEDE','COLE_NOMBRE_SEDE','COLE_SEDE_PRINCIPAL',
'COLE_COD_MCPIO_UBICACION','COLE_MCPIO_UBICACION','COLE_COD_DEPTO_UBICACION','COLE_DEPTO_UBICACION','ESTU_PRIVADO_LIBERTAD',
'ESTU_COD_MCPIO_PRESENTACION','ESTU_MCPIO_PRESENTACION','ESTU_DEPTO_PRESENTACION','ESTU_COD_DEPTO_PRESENTACION','PUNT_LECTURA_CRITICA',
'PERCENTIL_LECTURA_CRITICA','DESEMP_LECTURA_CRITICA','PUNT_MATEMATICAS','PERCENTIL_MATEMATICAS','DESEMP_MATEMATICAS',
'PUNT_C_NATURALES','PERCENTIL_C_NATURALES','DESEMP_C_NATURALES','PUNT_SOCIALES_CIUDADANAS','PERCENTIL_SOCIALES_CIUDADANAS',
'DESEMP_SOCIALES_CIUDADANAS','PUNT_INGLES','PERCENTIL_INGLES','DESEMP_INGLES','PERCENTIL_GLOBAL','ESTU_INSE_INDIVIDUAL'
  ]
df_sincolumans = df.drop(columnas,axis=1)
#se eliminan los registros nulos, se analiza el rendimiento, en caso tal se aplica otro metodo de imputacion de datos
#despues de quitar los datos nulos quedan 89714 registros.

df_limpio = df_sincolumans.dropna()

#df_limpio.to_excel('df_output\datos_publicos_privados_vf.xlsx',index=False)
#print(df_limpio.info())

